{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.object.values.js","webpack:///./src/assets/images/delete.svg","webpack:///./src/assets/images/next.svg","webpack:///./src/views/FlowChart/FlowChartComponent/ParamList.vue?9550","webpack:///./src/assets/images/check.svg","webpack:///./src/views/FlowChart/FlowChart.vue?0ae7","webpack:///./node_modules/core-js/internals/object-to-array.js","webpack:///./src/views/FlowChart/FlowChart.vue?fef7","webpack:///./src/views/FlowChart/FlowChartComponent/ParamList.vue?e26d","webpack:///src/views/FlowChart/FlowChartComponent/ParamList.vue","webpack:///./src/views/FlowChart/FlowChartComponent/ParamList.vue?b998","webpack:///./src/views/FlowChart/FlowChartComponent/ParamList.vue","webpack:///./src/views/FlowChart/FlowChartComponent/DialogFrom.vue?5101","webpack:///src/views/FlowChart/FlowChartComponent/DialogFrom.vue","webpack:///./src/views/FlowChart/FlowChartComponent/DialogFrom.vue?8af8","webpack:///./src/views/FlowChart/FlowChartComponent/DialogFrom.vue","webpack:///src/views/FlowChart/FlowChart.vue","webpack:///./src/views/FlowChart/FlowChart.vue?4f6a","webpack:///./src/views/FlowChart/FlowChart.vue","webpack:///./src/assets/images/clear.svg","webpack:///./node_modules/core-js/modules/web.url.to-json.js","webpack:///./src/assets/images/back.svg","webpack:///./src/assets/images/refresh.svg"],"names":["$","$values","values","target","stat","O","module","exports","DESCRIPTORS","objectKeys","toIndexedObject","propertyIsEnumerable","f","createMethod","TO_ENTRIES","it","key","keys","length","i","result","call","push","entries","render","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","on","goBack","_v","_s","curItemVuex","importProject","isShow","directives","name","rawName","value","expression","staticStyle","dragToolsBox","preStep","nextStep","clearGraph","resetView","delCell","saveProject","ref","project_structure","running_config","isInitalModel","model","callback","$$v","$set","_l","item","label","textWrap","text","isInitalFunction","noCurNodes","staticRenderFns","currentNodeData","rules","isdisabled","index","minRows","maxRows","queryString","cb","tips","handleSelect","props","default","data","nodeParamsList","local_name","other","computed","nodeParams","$store","state","FlowChart","paramList","params","nodeDataVuex","nodeData","watch","handler","newValue","forEach","dataObj","deep","methods","console","log","checkLocalName","Error","setTimeout","checkOther","rule","val","commit","component","dialogFormVisible","DialogClose","$event","ruleForm","submitForm","resetForm","project_id","project_name","project_desc","region","type","resource","inherit","formVisibleVuex","dialogFrom","projectBasicInfoVuex","projectBasicInfo","$refs","formName","validate","valid","that","created","beforeDestroy","components","ParamList","DialogFrom","graph","curNode","curParams","stencil","graphNodes","initial_module","initial_function","graph_config","project_basic_info","mapMsg","itemMsg","counter","colorList","shapeList","nodeShape","isChangeCurrentProject","node","shape","filter","res","keyName","isControlGraphVuex","isControlGraph","projectManage","resultList","curItem","projectConfig","setAttrs","setData","fromJSON","newVal","id","desc","immediate","setGraph","container","document","getElementById","width","height","autoResize","background","color","grid","size","visible","panning","enabled","selecting","rubberband","showNodeSelectionBox","showEdgeSelectionBox","modifiers","history","mousewheel","zoomAtMousePosition","minScale","maxScale","connecting","router","args","padding","connector","radius","anchor","connectionPoint","allowBlank","snap","createEdge","line","stroke","strokeWidth","targetMarker","zIndex","validateConnection","targetMagnet","highlighting","magnetAdsorbed","fill","resizing","minWidth","minHeight","maxWidth","maxHeight","orthogonal","restricted","autoScroll","preserveAspectRatio","allowReverse","rotating","snapline","keyboard","clipboard","setNode","groups","top","position","circle","r","magnet","style","visibility","right","bottom","left","items","classList","title","graphHeight","Math","ceil","layoutOptions","rowHeight","nodeSet","ports","Object","currentData","Array","isArray","currentDataItem","initailData","dataKey","nodeItem","body","itemEx","stencilGraphWidth","stencilGraphHeight","collapsable","columns","columnWidth","resizeToFit","appendChild","load","setKeyEvent","bindKey","cells","copy","cut","isClipboardEmpty","cleanSelection","select","canUndo","undo","canRedo","redo","nodes","removeCells","zoom","show","showPorts","setNodeData","paramObj","listItem","map","initialModule","removedNode","message","edge","currentCell","checkParams","$api","goBackSaveProject","lock","centerContent","clearCells","$confirm","confirmButtonText","cancelButtonText","$router","graph_config_null","errorList","runningConfig","graphConfig","every","dataItem","isNode","showClose","duration","getOneProjectData","getProjectConfig","getModules","then","getInitialData","initData","saveVuexToLocal","sessionStorage","getItem","replaceState","window","addEventListener","saveVuex","cancelListening","removeEventListener","removeItem","setItem","JSON","stringify","onmousedown","event","disx","pageX","offsetLeft","disy","pageY","offsetTop","isDrop","onmouseup","onmousemove","mounted","activated","deactivated","proto","enumerable","toJSON","URL","prototype","toString"],"mappings":"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","file":"static/js/chunk-66892c0b.e2d34337.js","sourcesContent":["var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.es/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","module.exports = __webpack_public_path__ + \"static/img/delete.76702a3e.svg\";","module.exports = __webpack_public_path__ + \"static/img/next.b23c6a6a.svg\";","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ParamList.vue?vue&type=style&index=0&id=2cf51a2b&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"static/img/check.6779301a.svg\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FlowChart.vue?vue&type=style&index=0&id=26c3b85e&lang=scss&scoped=true&\"","var DESCRIPTORS = require('../internals/descriptors');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {\n        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.es/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.es/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"FlowChart\"}},[_c('DialogFrom'),_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('div',{staticClass:\"header-btn\"},[_c('el-button',{on:{\"click\":_vm.goBack}},[_vm._v(\"返回\")]),_c('h3',[_vm._v(_vm._s((\"项目名:\" + (_vm.curItemVuex.name))))]),_c('el-button-group',[_c('el-button',{on:{\"click\":_vm.importProject}},[_vm._v(\"导出数据\")]),_c('el-button',{on:{\"click\":_vm.isShow}},[_vm._v(\"项目基本信息\")])],1)],1)])],1),_c('el-row',{attrs:{\"type\":\"flex\",\"justify\":\"start\"}},[_c('el-col',[_c('div',{staticClass:\"left-node\"},[_c('div',{attrs:{\"id\":\"stencil\"}})])]),_c('el-col',[_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.isControlGraphVuex),expression:\"isControlGraphVuex\"}],staticClass:\"mid-work\",staticStyle:{\"display\":\"flex\"},attrs:{\"element-loading-text\":\"节点参数填写有误\",\"element-loading-spinner\":\"el-icon-loading\",\"element-loading-background\":\"rgba(0, 0, 0, 0.5)\"}},[_c('div',{staticClass:\"edit-tools\",attrs:{\"id\":\"tools-box\"},on:{\"click\":_vm.dragToolsBox}},[_c('img',{staticClass:\"tool-item\",attrs:{\"src\":require(\"assets/images/back.svg\")},on:{\"click\":_vm.preStep}}),_c('img',{staticClass:\"tool-item\",attrs:{\"src\":require(\"assets/images/next.svg\")},on:{\"click\":_vm.nextStep}}),_c('img',{staticClass:\"tool-item\",attrs:{\"src\":require(\"assets/images/clear.svg\")},on:{\"click\":_vm.clearGraph}}),_c('img',{staticClass:\"tool-item\",attrs:{\"src\":require(\"assets/images/refresh.svg\")},on:{\"click\":_vm.resetView}}),_c('img',{staticClass:\"tool-item\",attrs:{\"src\":require(\"assets/images/delete.svg\")},on:{\"click\":_vm.delCell}}),_c('img',{staticClass:\"tool-item\",attrs:{\"src\":require(\"assets/images/check.svg\")},on:{\"click\":_vm.saveProject}})]),_c('div',{staticClass:\"main\",attrs:{\"id\":\"container\"}},[_vm._v(\"可拖动组件\")])])]),_c('el-col',[_c('div',{staticClass:\"right-param\"},[_c('div',{staticClass:\"right-param-title\"},[_vm._v(\"项目配置\")]),_c('div',{staticClass:\"right-param-form\"},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.project_structure.running_config,\"label-width\":\"80px\"}},[_c('el-form-item',{staticStyle:{\"padding-right\":\"10px\"},attrs:{\"label\":\"初始模块\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\",\"size\":\"small\",\"disabled\":_vm.isInitalModel},model:{value:(_vm.project_structure.running_config.initial_module),callback:function ($$v) {_vm.$set(_vm.project_structure.running_config, \"initial_module\", $$v)},expression:\"project_structure.running_config.initial_module\"}},_vm._l((_vm.graphNodes),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.attrs.label.textWrap.text,\"value\":item.attrs.label.textWrap.text}})}),1)],1),_c('el-form-item',{staticStyle:{\"padding-right\":\"10px\"},attrs:{\"label\":\"入口函数\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\",\"size\":\"small\",\"disabled\":_vm.isInitalFunction},model:{value:(_vm.project_structure.running_config.initial_function),callback:function ($$v) {_vm.$set(_vm.project_structure.running_config, \"initial_function\", $$v)},expression:\"project_structure.running_config.initial_function\"}},_vm._l((_vm.initial_function),function(item){return _c('el-option',{key:item,attrs:{\"label\":item,\"value\":item}})}),1)],1)],1)],1),_c('div',{staticClass:\"right-param-title\"},[_vm._v(\"参数配置\")]),_c('ParamList',{attrs:{\"noCurNodes\":_vm.noCurNodes}})],1)])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-form',{ref:\"formName\",attrs:{\"model\":_vm.currentNodeData,\"rules\":_vm.rules,\"label-width\":\"100px\",\"disabled\":_vm.isdisabled}},_vm._l((_vm.nodeParams),function(item,index){return _c('el-form-item',{key:index + item.name,staticStyle:{\"padding-right\":\"10px\"},attrs:{\"prop\":item.name === 'local_name' ? item.name : 'other',\"label\":item.name}},[_c('el-autocomplete',{staticClass:\"inline-input\",attrs:{\"type\":\"textarea\",\"autosize\":{ minRows: 1, maxRows: 4 },\"size\":\"mini\",\"placeholder\":\"请输入\",\"fetch-suggestions\":function (queryString, cb) {\n            cb(item.tips);\n          }},on:{\"select\":_vm.handleSelect},model:{value:(_vm.currentNodeData[item['name']]),callback:function ($$v) {_vm.$set(_vm.currentNodeData, item['name'], $$v)},expression:\"currentNodeData[item['name']]\"}})],1)}),1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <el-form\r\n      ref=\"formName\"\r\n      :model=\"currentNodeData\"\r\n      :rules=\"rules\"\r\n      label-width=\"100px\"\r\n      :disabled=\"isdisabled\"\r\n    >\r\n      <el-form-item\r\n        style=\"padding-right: 10px\"\r\n        :prop=\"item.name === 'local_name' ? item.name : 'other'\"\r\n        v-for=\"(item, index) in nodeParams\"\r\n        :key=\"index + item.name\"\r\n        :label=\"item.name\"\r\n      >\r\n        <el-autocomplete\r\n          class=\"inline-input\"\r\n          type=\"textarea\"\r\n          :autosize=\"{ minRows: 1, maxRows: 4 }\"\r\n          size=\"mini\"\r\n          v-model=\"currentNodeData[item['name']]\"\r\n          placeholder=\"请输入\"\r\n          :fetch-suggestions=\"\r\n            (queryString, cb) => {\r\n              cb(item.tips);\r\n            }\r\n          \"\r\n          @select=\"handleSelect\"\r\n        >\r\n        </el-autocomplete>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    //当前画布节点列表,去除了当前节点\r\n    noCurNodes: {\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    // const that = this;\r\n    let checkLocalName = this.checkLocalName;\r\n    let checkOther = this.checkOther;\r\n    return {\r\n      nodeParamsList: {\r\n        //项目参数\r\n        default: [\r\n          {\r\n            name: \"模型名称\", //参数名称\r\n            value: \"\", //输入框的值\r\n            trigger: \"noShow\", //有这个属性则不展示下拉列表\r\n            key: \"modelName\", //参数的唯一标识\r\n            //提示列表\r\n            tips: [\r\n              { value: \"100\", otherData: {} },\r\n              { value: \"1000\", otherData: {} },\r\n              { value: \"10000\", otherData: {} },\r\n            ],\r\n          },\r\n          {\r\n            name: \"迭代次数\",\r\n            value: \"\",\r\n            key: \"iterationNumber\", //参数的唯一标识\r\n            tips: [\r\n              { value: \"100\", otherData: {} },\r\n              { value: \"1000\", otherData: {} },\r\n              { value: \"10000\", otherData: {} },\r\n            ],\r\n          },\r\n          {\r\n            name: \"批次大小\",\r\n            key: \"pc\",\r\n            value: \"\",\r\n            tips: [\r\n              { value: \"100\", otherData: {} },\r\n              { value: \"1000\", otherData: {} },\r\n              { value: \"10000\", otherData: {} },\r\n            ],\r\n          },\r\n          {\r\n            name: \"初始模块\",\r\n            value: \"\",\r\n            key: \"mk\",\r\n            tips: [\r\n              { value: \"模型1\", otherData: {} },\r\n              { value: \"模型2\", otherData: {} },\r\n              { value: \"模型3\", otherData: {} },\r\n            ],\r\n          },\r\n          {\r\n            name: \"入口函数\",\r\n            value: \"\",\r\n            key: \"rk\",\r\n            tips: [\r\n              { value: \"入口函数1\", otherData: {} },\r\n              { value: \"入口函数2\", otherData: {} },\r\n              { value: \"入口函数3\", otherData: {} },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      //校验规则\r\n      rules: {\r\n        local_name: [\r\n          { validator: checkLocalName, trigger: [\"change\", \"blur\"] },\r\n        ],\r\n        other: [{ validator: checkOther, trigger: [\"change\", \"blur\"] }],\r\n      },\r\n      currentNodeData: {},\r\n      //当前被选中的节点类型\r\n      //   nodeType: 'default',\r\n    };\r\n  },\r\n  computed: {\r\n    // 可拖动组件节点的参数列表\r\n    nodeParams() {\r\n      return this.$store.state.FlowChart.paramList.params;\r\n    },\r\n    nodeDataVuex() {\r\n      return this.$store.state.FlowChart.paramList.nodeData;\r\n    },\r\n    isdisabled() {\r\n      return this.$store.state.FlowChart.paramList.isdisabled;\r\n    },\r\n  },\r\n  watch: {\r\n    nodeParams: {\r\n      handler(newValue) {\r\n        let dataObj = {};\r\n        this.currentNodeData = {};\r\n        newValue.forEach((item) => {\r\n          dataObj[item[\"name\"]] = item.value;\r\n        });\r\n        this.currentNodeData = { ...dataObj };\r\n        // this.$refs[\"forName\"].resetFields();\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n  methods: {\r\n    handleSelect() {\r\n      console.log(\"ss\");\r\n      // console.log(scope);\r\n    },\r\n\r\n    //校验函数,校验local_name\r\n    checkLocalName(rule, value, callback) {\r\n      if (!value) {\r\n        return callback(new Error(\"参数不能为空\"));\r\n      }\r\n      console.log(this.noCurNodes);\r\n      console.log(this.currentNodeData.local_name);\r\n      setTimeout(() => {\r\n        if (\r\n          this.noCurNodes.findIndex(\r\n            (item) => item.data.local_name === this.currentNodeData.local_name\r\n          ) !== -1\r\n        ) {\r\n          this.$store.commit(\"FlowChart/setParamList\", {\r\n            key: \"isControlGraph\",\r\n            value: true,\r\n          });\r\n          callback(new Error(\"名字已存在\"));\r\n        } else {\r\n          this.$store.commit(\"FlowChart/setParamList\", {\r\n            key: \"isControlGraph\",\r\n            value: false,\r\n          });\r\n          console.log(this.currentNodeData);\r\n          this.$store.commit(\"FlowChart/setParamList\", {\r\n            key: \"nodeData\",\r\n            value: { ...this.currentNodeData },\r\n          });\r\n          callback();\r\n        }\r\n      }, 500);\r\n    },\r\n    //校验函数,校验\r\n    checkOther(rule, value, callback) {\r\n      console.log(rule);\r\n      console.log(value);\r\n      // console.log();\r\n      let val = Object.values(this.currentNodeData).every((i) => i);\r\n      if (!val) {\r\n        this.$store.commit(\"FlowChart/setParamList\", {\r\n          key: \"isControlGraph\",\r\n          value: true,\r\n        });\r\n        return callback(new Error(\"参数不能为空\"));\r\n      } else {\r\n        this.$store.commit(\"FlowChart/setParamList\", {\r\n          key: \"isControlGraph\",\r\n          value: false,\r\n        });\r\n        console.log(this.currentNodeData);\r\n        this.$store.commit(\"FlowChart/setParamList\", {\r\n          key: \"nodeData\",\r\n          value: { ...this.currentNodeData },\r\n        });\r\n        return callback();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n// .el-form-item {\r\n//   // margin: 0;\r\n// }\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ParamList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ParamList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ParamList.vue?vue&type=template&id=2cf51a2b&scoped=true&\"\nimport script from \"./ParamList.vue?vue&type=script&lang=js&\"\nexport * from \"./ParamList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ParamList.vue?vue&type=style&index=0&id=2cf51a2b&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2cf51a2b\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-Dialog',{attrs:{\"title\":\"项目信息\",\"visible\":_vm.dialogFormVisible,\"close-on-click-modal\":false,\"before-close\":_vm.DialogClose},on:{\"update:visible\":function($event){_vm.dialogFormVisible=$event}}},[_c('div',[_c('el-form',{ref:\"ruleForm\",staticClass:\"demo-ruleForm\",attrs:{\"model\":_vm.ruleForm,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"方案编号\",\"prop\":\"project_id\"}},[_c('el-input',{attrs:{\"disabled\":true},model:{value:(_vm.ruleForm.project_id),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"project_id\", $$v)},expression:\"ruleForm.project_id\"}})],1),_c('el-form-item',{attrs:{\"label\":\"方案名称\",\"prop\":\"project_name\"}},[_c('el-input',{model:{value:(_vm.ruleForm.project_name),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"project_name\", $$v)},expression:\"ruleForm.project_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"版本备注\",\"prop\":\"project_desc\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"autosize\":{ minRows: 2, maxRows: 4 }},model:{value:(_vm.ruleForm.project_desc),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"project_desc\", $$v)},expression:\"ruleForm.project_desc\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.submitForm('ruleForm')}}},[_vm._v(\"确定\")]),_c('el-button',{on:{\"click\":function($event){return _vm.resetForm('ruleForm')}}},[_vm._v(\"取消\")])],1)],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <el-Dialog\r\n    title=\"项目信息\"\r\n    :visible.sync=\"dialogFormVisible\"\r\n    :close-on-click-modal=\"false\"\r\n    :before-close=\"DialogClose\"\r\n  >\r\n    <div>\r\n      <el-form\r\n        :model=\"ruleForm\"\r\n        :rules=\"rules\"\r\n        ref=\"ruleForm\"\r\n        label-width=\"100px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item label=\"方案编号\" prop=\"project_id\">\r\n          <el-input v-model=\"ruleForm.project_id\" :disabled=\"true\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"方案名称\" prop=\"project_name\">\r\n          <el-input v-model=\"ruleForm.project_name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"版本备注\" prop=\"project_desc\">\r\n          <el-input\r\n            type=\"textarea\"\r\n            v-model=\"ruleForm.project_desc\"\r\n            :autosize=\"{ minRows: 2, maxRows: 4 }\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"\r\n            >确定</el-button\r\n          >\r\n          <el-button @click=\"resetForm('ruleForm')\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </el-Dialog>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      dialogFormVisible: false,\r\n      ruleForm: {\r\n        project_id: 7,\r\n        project_name: \"\", //项目名称\r\n        project_desc: \"\", //项目描述\r\n      },\r\n      rules: {\r\n        project_name: [\r\n          { required: true, message: \"请输入方案名称\", trigger: \"blur\" },\r\n          {\r\n            min: 3,\r\n            max: 90,\r\n            message: \"长度在 3 到 90 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        region: [\r\n          { required: true, message: \"请选择算法类型\", trigger: \"change\" },\r\n        ],\r\n        type: [\r\n          {\r\n            type: \"array\",\r\n            required: true,\r\n            message: \"请至少选择一个活动性质\",\r\n            trigger: \"change\",\r\n          },\r\n        ],\r\n        resource: [\r\n          { required: true, message: \"请选择创建方式\", trigger: \"change\" },\r\n        ],\r\n        project_desc: [\r\n          { required: true, message: \"请填写版本备注\", trigger: \"blur\" },\r\n        ],\r\n        inherit: [\r\n          { required: true, message: \"请选择继承方案\", trigger: \"change\" },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    formVisibleVuex() {\r\n      return this.$store.state.FlowChart.dialogFrom.dialogFormVisible;\r\n    },\r\n    projectBasicInfoVuex() {\r\n      return this.$store.state.FlowChart.dialogFrom.projectBasicInfo;\r\n    },\r\n  },\r\n  watch: {\r\n    formVisibleVuex(newValue) {\r\n      this.dialogFormVisible = newValue;\r\n    },\r\n    projectBasicInfoVuex(newValue) {\r\n      this.ruleForm = { ...newValue };\r\n    },\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      const that = this;\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          that.$store.commit(\"FlowChart/setDialogFrom\", {\r\n            key: \"projectBasicInfo\",\r\n            value: { ...that.ruleForm },\r\n          });\r\n          that.$store.commit(\"FlowChart/setDialogFrom\", {\r\n            key: \"dialogFormVisible\",\r\n            value: false,\r\n          });\r\n          this.$refs[formName].resetFields();\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //重置\r\n    resetForm() {\r\n      this.$store.commit(\"FlowChart/setDialogFrom\", {\r\n        key: \"dialogFormVisible\",\r\n        value: false,\r\n      });\r\n    },\r\n    //关闭弹窗\r\n    DialogClose() {\r\n      this.$store.commit(\"FlowChart/setDialogFrom\", {\r\n        key: \"dialogFormVisible\",\r\n        value: false,\r\n      });\r\n    },\r\n  },\r\n  created() {\r\n    console.log(\"dialogFrom\");\r\n  },\r\n  beforeDestroy() {\r\n    console.log(\"dialogFrom,beforeDestroy \");\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DialogFrom.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DialogFrom.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DialogFrom.vue?vue&type=template&id=4225654d&scoped=true&\"\nimport script from \"./DialogFrom.vue?vue&type=script&lang=js&\"\nexport * from \"./DialogFrom.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4225654d\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div id=\"FlowChart\">\r\n    <!-- 弹窗组件 -->\r\n    <DialogFrom></DialogFrom>\r\n    <el-row\r\n      ><el-col :span=\"24\"\r\n        ><div class=\"header-btn\">\r\n          <el-button @click=\"goBack\">返回</el-button>\r\n          <h3>{{ `项目名:${curItemVuex.name}` }}</h3>\r\n          <el-button-group>\r\n            <!-- <el-button @click=\"saveProject\">保存</el-button>\r\n            <el-button @click=\"clearGraph\">清空</el-button>\r\n            <el-button @click=\"delCell\">删除</el-button>\r\n            <el-button @click=\"resetView\">复位</el-button>\r\n            <el-button @click=\"preStep\">上一步</el-button>\r\n            <el-button @click=\"nextStep\">下一步</el-button> -->\r\n            <el-button @click=\"importProject\">导出数据</el-button>\r\n            <el-button @click=\"isShow\">项目基本信息</el-button></el-button-group\r\n          >\r\n        </div>\r\n      </el-col></el-row\r\n    >\r\n    <el-row type=\"flex\" justify=\"start\">\r\n      <!-- 侧边栏 -->\r\n      <el-col\r\n        ><div class=\"left-node\">\r\n          <div id=\"stencil\"></div></div\r\n      ></el-col>\r\n      <!-- 画布 -->\r\n      <el-col\r\n        ><div\r\n          class=\"mid-work\"\r\n          style=\"display: flex\"\r\n          v-loading=\"isControlGraphVuex\"\r\n          element-loading-text=\"节点参数填写有误\"\r\n          element-loading-spinner=\"el-icon-loading\"\r\n          element-loading-background=\"rgba(0, 0, 0, 0.5)\"\r\n        >\r\n          <!-- draggable=\"true\" -->\r\n          <div id=\"tools-box\" class=\"edit-tools\" @click=\"dragToolsBox\">\r\n            <img\r\n              class=\"tool-item\"\r\n              @click=\"preStep\"\r\n              src=\"~assets/images/back.svg\"\r\n            />\r\n            <img\r\n              class=\"tool-item\"\r\n              @click=\"nextStep\"\r\n              src=\"~assets/images/next.svg\"\r\n            />\r\n            <img\r\n              class=\"tool-item\"\r\n              @click=\"clearGraph\"\r\n              src=\"~assets/images/clear.svg\"\r\n            />\r\n            <img\r\n              class=\"tool-item\"\r\n              @click=\"resetView\"\r\n              src=\"~assets/images/refresh.svg\"\r\n            />\r\n            <img\r\n              class=\"tool-item\"\r\n              @click=\"delCell\"\r\n              src=\"~assets/images/delete.svg\"\r\n            />\r\n            <img\r\n              class=\"tool-item\"\r\n              @click=\"saveProject\"\r\n              src=\"~assets/images/check.svg\"\r\n            />\r\n          </div>\r\n          <div id=\"container\" class=\"main\">可拖动组件</div>\r\n        </div></el-col\r\n      >\r\n      <!-- 右侧参数列表 -->\r\n      <el-col\r\n        ><div class=\"right-param\">\r\n          <div class=\"right-param-title\">项目配置</div>\r\n          <div class=\"right-param-form\">\r\n            <el-form\r\n              ref=\"form\"\r\n              :model=\"project_structure.running_config\"\r\n              label-width=\"80px\"\r\n            >\r\n              <el-form-item label=\"初始模块\" style=\"padding-right: 10px\">\r\n                <el-select\r\n                  v-model=\"project_structure.running_config.initial_module\"\r\n                  placeholder=\"请选择\"\r\n                  size=\"small\"\r\n                  :disabled=\"isInitalModel\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"item in graphNodes\"\r\n                    :key=\"item.value\"\r\n                    :label=\"item.attrs.label.textWrap.text\"\r\n                    :value=\"item.attrs.label.textWrap.text\"\r\n                  >\r\n                  </el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"入口函数\" style=\"padding-right: 10px\">\r\n                <el-select\r\n                  v-model=\"project_structure.running_config.initial_function\"\r\n                  placeholder=\"请选择\"\r\n                  size=\"small\"\r\n                  :disabled=\"isInitalFunction\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"item in initial_function\"\r\n                    :key=\"item\"\r\n                    :label=\"item\"\r\n                    :value=\"item\"\r\n                  >\r\n                  </el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n            </el-form>\r\n          </div>\r\n          <div class=\"right-param-title\">参数配置</div>\r\n          <ParamList :noCurNodes=\"noCurNodes\"></ParamList></div\r\n      ></el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { Graph, Shape, Addon, DataUri } from \"@antv/x6\";\r\nimport { Graph, Shape, Addon } from \"@antv/x6\";\r\nimport \"@antv/x6-vue-shape\";\r\n// import { text } from '@antv/x6/lib/util/dom/text'\r\nimport ParamList from \"./FlowChartComponent/ParamList.vue\";\r\nimport DialogFrom from \"./FlowChartComponent/DialogFrom.vue\";\r\nexport default {\r\n  components: {\r\n    ParamList,\r\n    DialogFrom,\r\n  },\r\n  data() {\r\n    return {\r\n      graph: \"\", //画布对象\r\n      curNode: \"\", //当前选中节点对象\r\n      curParams: \"\", //当前选中节点需填参数\r\n      stencil: \"\", //组件侧边栏对象\r\n      graphNodes: [], //画布现有节点\r\n      project_structure: {\r\n        running_config: {\r\n          //运行参数\r\n          initial_module: \"\", //初始模块\r\n          initial_function: \"\", //入口函数\r\n        },\r\n        graph_config: [\r\n          {\r\n            position: {\r\n              x: 700,\r\n              y: 160,\r\n            },\r\n            size: {\r\n              width: 80,\r\n              height: 34.285714285714285,\r\n            },\r\n            attrs: {\r\n              label: {\r\n                text: \"classifer_mnist_2\",\r\n              },\r\n            },\r\n            shape: \"Classifier\",\r\n            ports: {\r\n              groups: {\r\n                top: {\r\n                  position: \"top\",\r\n                  attrs: {\r\n                    circle: {\r\n                      r: 4,\r\n                      magnet: true,\r\n                      stroke: \"#5F95FF\",\r\n                      strokeWidth: 1,\r\n                      fill: \"#fff\",\r\n                      style: {\r\n                        visibility: \"hidden\",\r\n                      },\r\n                    },\r\n                  },\r\n                },\r\n                right: {\r\n                  position: \"right\",\r\n                  attrs: {\r\n                    circle: {\r\n                      r: 4,\r\n                      magnet: true,\r\n                      stroke: \"#5F95FF\",\r\n                      strokeWidth: 1,\r\n                      fill: \"#fff\",\r\n                      style: {\r\n                        visibility: \"hidden\",\r\n                      },\r\n                    },\r\n                  },\r\n                },\r\n                bottom: {\r\n                  position: \"bottom\",\r\n                  attrs: {\r\n                    circle: {\r\n                      r: 4,\r\n                      magnet: true,\r\n                      stroke: \"#5F95FF\",\r\n                      strokeWidth: 1,\r\n                      fill: \"#fff\",\r\n                      style: {\r\n                        visibility: \"hidden\",\r\n                      },\r\n                    },\r\n                  },\r\n                },\r\n                left: {\r\n                  position: \"left\",\r\n                  attrs: {\r\n                    circle: {\r\n                      r: 4,\r\n                      magnet: true,\r\n                      stroke: \"#5F95FF\",\r\n                      strokeWidth: 1,\r\n                      fill: \"#fff\",\r\n                      style: {\r\n                        visibility: \"hidden\",\r\n                      },\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n              items: [\r\n                {\r\n                  group: \"top\",\r\n                  id: \"bd7a41e4-fc63-496b-9d5b-6bd2b3f09dbd\",\r\n                },\r\n                {\r\n                  group: \"right\",\r\n                  id: \"9ae12c09-2fdf-4bc9-8ee4-be3d9e196339\",\r\n                },\r\n                {\r\n                  group: \"bottom\",\r\n                  id: \"0d634f71-9db0-48b0-bfb8-6cedf89ab9fb\",\r\n                },\r\n                {\r\n                  group: \"left\",\r\n                  id: \"bd547318-939b-4536-8e3c-9fab96da6466\",\r\n                },\r\n              ],\r\n            },\r\n            id: \"b0b95b26-b25e-4959-906d-b9342c8d5744\",\r\n            data: {\r\n              name2: \"MNIST_Classifier\",\r\n              layer: \"3\",\r\n              learning_rate: \"0.01\",\r\n              name: \"classifer_mnist\",\r\n              local_name: \"classifer_mnist_2\",\r\n            },\r\n            zIndex: 1,\r\n          },\r\n        ], //流程图导出数据\r\n      },\r\n      project_basic_info: {\r\n        project_id: 40,\r\n        project_name: \"功能测试\", //项目名称\r\n        project_desc: \"用来测试功能\", //项目描述\r\n      },\r\n      value: \"\",\r\n      mapMsg: {}, //模块信息集合\r\n      // 项目信息集合\r\n      itemMsg: {\r\n        counter: 1,\r\n        running_config: {\r\n          initial_module: \"picture_feature_extractor\",\r\n\r\n          initial_function: \"train\",\r\n        },\r\n        graph_config: [],\r\n      },\r\n      dialogFormVisible: false, //弹窗标记\r\n      // 颜色数组\r\n      colorList: [\r\n        \"#fc5c65\",\r\n        \"#fd9644\",\r\n        \"#fed330\",\r\n        \"#26de81\",\r\n        \"#2bcbba\",\r\n        \"#45aaf2\",\r\n        \"#4b6584\",\r\n        \"#d1d8e0\",\r\n        \"#b8e994\",\r\n        \"#60a3bc\",\r\n        \"#4a69bd\",\r\n        \"#f8c291\",\r\n      ],\r\n      // 形状列表\r\n      shapeList: [\"polygon\", \"circle\", \"rect\"],\r\n      //\r\n      nodeShape: [\r\n        //菱形\r\n        {\r\n          inherit: \"polygon\",\r\n          width: 70, // Number，可选，节点大小的 width 值\r\n          height: 30, // Number，可选，节点大小的 height 值\r\n          attrs: {\r\n            body: {\r\n              fill: \"#fc5c65\",\r\n              stroke: \"#e77c8e\",\r\n              strokeWidth: 1,\r\n              refPoints: \"5,0 50,0 45,20 0,20\",\r\n            },\r\n            label: {\r\n              color: \"#262626\",\r\n              fontSize: 10,\r\n              // refX: 8,\r\n              textAnchor: \"middle\",\r\n              textWrap: {\r\n                // text: \"lorem ipsum dolor sit amet consectetur adipiscing elit\",\r\n                text: \"\",\r\n                width: -20,\r\n                height: \"90%\",\r\n                ellipsis: true, // 文本超出显示范围时，自动添加省略号\r\n                breakWord: true, // 是否截断单词\r\n              },\r\n            },\r\n          },\r\n          ports: {\r\n            // ...ports,//链接桩\r\n          },\r\n        },\r\n        //圆角矩形\r\n        {\r\n          inherit: \"rect\",\r\n          width: 70, // Number，可选，节点大小的 width 值\r\n          height: 30, // Number，可选，节点大小的 height 值\r\n          attrs: {\r\n            body: {\r\n              fill: \"#fc5c65\",\r\n              stroke: \"#e77c8e\",\r\n              strokeWidth: 1,\r\n              rx: 20,\r\n              ry: 26,\r\n            },\r\n            label: {\r\n              color: \"#262626\",\r\n              fontSize: 10,\r\n              // refX: 8,\r\n              textAnchor: \"middle\", //文字锚点\r\n              textWrap: {\r\n                // text: \"lorem ipsum dolor sit amet consectetur adipiscing elit\",\r\n                text: \"\",\r\n                width: -10,\r\n                height: \"90%\",\r\n                ellipsis: true, // 文本超出显示范围时，自动添加省略号\r\n                breakWord: true, // 是否截断单词\r\n              },\r\n            },\r\n          },\r\n          ports: {\r\n            // ...ports,//链接桩\r\n          },\r\n        },\r\n        //直角矩形\r\n        {\r\n          inherit: \"rect\",\r\n          width: 70, // Number，可选，节点大小的 width 值\r\n          height: 30, // Number，可选，节点大小的 height 值\r\n          attrs: {\r\n            body: {\r\n              fill: \"#fc5c65\",\r\n              stroke: \"#e77c8e\",\r\n              strokeWidth: 1,\r\n            },\r\n            label: {\r\n              color: \"#262626\",\r\n              fontSize: 10,\r\n              // refX: 50,\r\n              textAnchor: \"middle\",\r\n              textWrap: {\r\n                // text: \"lorem ipsum dolor sit amet consectetur adipiscing elit\",\r\n                text: \"\",\r\n                width: -10,\r\n                height: \"90%\", //文本高度\r\n                ellipsis: true, // 文本超出显示范围时，自动添加省略号\r\n                breakWord: true, // 是否截断单词\r\n              },\r\n            },\r\n          },\r\n          ports: {\r\n            // ...ports,//链接桩\r\n          },\r\n        },\r\n      ],\r\n      //是否有修改当前项目,true 为有修改, false为没有修改\r\n      isChangeCurrentProject: false,\r\n    };\r\n  },\r\n  computed: {\r\n    //当前选中节点的数据(data属性)\r\n    nodeData() {\r\n      return this.$store.state.FlowChart.paramList.nodeData;\r\n    },\r\n    //入口函数列表\r\n    initial_function() {\r\n      let node = this.graphNodes.filter((res) => {\r\n        return (\r\n          res.attrs.label.textWrap.text ===\r\n          this.project_structure.running_config.initial_module\r\n        );\r\n      })[0];\r\n\r\n      if (node && node.data[\"name\"]) {\r\n        let shape = node[\"shape\"];\r\n        let keyName = node.data[\"name\"];\r\n        return this.mapMsg[shape].filter((res) => {\r\n          return res.name === keyName;\r\n        })[0][\"module_config\"][\"api\"];\r\n      } else {\r\n        return [];\r\n      }\r\n    },\r\n    // 是否禁用选中初始模块\r\n    isInitalModel() {\r\n      return this.graphNodes.length <= 0;\r\n    },\r\n    // 是否禁用选中入口函数\r\n    isInitalFunction() {\r\n      return this.project_structure.running_config.initial_module === \"\";\r\n    },\r\n    // 修改项目描述\r\n    projectBasicInfoVuex() {\r\n      return this.$store.state.FlowChart.dialogFrom.projectBasicInfo;\r\n    },\r\n    //当前节点列表,去掉当前选中\r\n    noCurNodes() {\r\n      return this.graphNodes.filter((res) => {\r\n        return (\r\n          this.curNode && this.curNode.data.local_name !== res.data.local_name\r\n        );\r\n      });\r\n    },\r\n    //是否可以操控画布 默认(false)可以\r\n    isControlGraphVuex() {\r\n      return this.$store.state.FlowChart.paramList.isControlGraph;\r\n    },\r\n    //是否当前选中项目的信息\r\n    curItemVuex() {\r\n      return this.$store.state.projectManage.resultList.curItem;\r\n    },\r\n    //项目配置\r\n    projectConfig() {\r\n      return this.project_structure.running_config;\r\n    },\r\n  },\r\n  watch: {\r\n    nodeData: {\r\n      handler(newValue) {\r\n        if (this.curNode) {\r\n          this.curNode.setAttrs({\r\n            label: { textWrap: { text: newValue[\"local_name\"] } },\r\n          });\r\n          this.curNode.setData(newValue);\r\n        }\r\n      },\r\n      deep: true,\r\n    },\r\n    projectConfig: {\r\n      handler() {\r\n        console.log(\"监听到改变了+++\");\r\n        this.isChangeCurrentProject = true;\r\n      },\r\n      deep: true,\r\n    },\r\n    projectBasicInfoVuex: {\r\n      handler(newValue) {\r\n        this.project_basic_info = { ...newValue };\r\n      },\r\n    },\r\n    graph_config: {\r\n      handler() {\r\n        this.graph.fromJSON(this.project_structure.graph_config);\r\n      },\r\n      deep: true,\r\n    },\r\n    curItemVuex: {\r\n      handler(newVal) {\r\n        this.project_basic_info.project_id = newVal.id;\r\n        this.project_basic_info.project_desc = newVal.desc;\r\n        this.project_basic_info.project_name = newVal.name;\r\n      },\r\n      deep: true,\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    //初始化画布\r\n    setGraph() {\r\n      const graph = new Graph({\r\n        container: document.getElementById(\"container\"),\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        autoResize: true,\r\n        background: {\r\n          color: \"white\", // 设置画布背景颜色\r\n        },\r\n        grid: {\r\n          size: 10, // 网格大小 .125rem\r\n          visible: true, // 渲染网格背景\r\n        },\r\n        // autoResize: true,\r\n        // 画布拖拽\r\n        panning: {\r\n          enabled: true,\r\n        },\r\n        // 选中\r\n        selecting: {\r\n          enabled: true,\r\n          rubberband: true,\r\n          showNodeSelectionBox: true, //允许选中节点\r\n          showEdgeSelectionBox: true, //允许选中边\r\n          modifiers: \"shift\",\r\n        },\r\n        history: true, // 历史记录\r\n        // connecting: {\r\n        //   connector: 's',\r\n        // },\r\n        //鼠标滚轮缩放\r\n        mousewheel: {\r\n          enabled: true,\r\n          zoomAtMousePosition: true,\r\n          modifiers: \"ctrl\",\r\n          minScale: 0.5,\r\n          maxScale: 3,\r\n        },\r\n        // 连线选项\r\n        connecting: {\r\n          router: {\r\n            name: \"manhattan\",\r\n            args: {\r\n              padding: 1,\r\n            },\r\n          },\r\n          connector: {\r\n            name: \"rounded\",\r\n            args: {\r\n              radius: 8,\r\n            },\r\n          },\r\n          anchor: \"center\",\r\n          connectionPoint: \"anchor\",\r\n          allowBlank: false,\r\n          snap: {\r\n            radius: 20,\r\n          },\r\n          createEdge() {\r\n            return new Shape.Edge({\r\n              attrs: {\r\n                line: {\r\n                  stroke: \"#A2B1C3\",\r\n                  strokeWidth: 2,\r\n                  targetMarker: {\r\n                    name: \"block\",\r\n                    width: 12,\r\n                    height: 8,\r\n                  },\r\n                },\r\n              },\r\n              zIndex: 0,\r\n            });\r\n          },\r\n          validateConnection({ targetMagnet }) {\r\n            return !!targetMagnet;\r\n          },\r\n        },\r\n        highlighting: {\r\n          magnetAdsorbed: {\r\n            name: \"stroke\",\r\n            args: {\r\n              attrs: {\r\n                fill: \"#5F95FF\",\r\n                stroke: \"#5F95FF\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n        //是否允许修改节点大小\r\n        resizing: {\r\n          enabled: true,\r\n          minWidth: 20,\r\n          minHeight: 10,\r\n          maxWidth: 500,\r\n          maxHeight: 500,\r\n          orthogonal: true,\r\n          restricted: false,\r\n          autoScroll: true,\r\n          preserveAspectRatio: false,\r\n          allowReverse: true,\r\n        },\r\n        //旋转节点\r\n        rotating: true,\r\n        //对齐线\r\n        snapline: true,\r\n        //快捷键\r\n        keyboard: true,\r\n        //剪切板\r\n        clipboard: true,\r\n      });\r\n      this.graph = graph;\r\n    },\r\n    //初始化侧边栏,注册节点\r\n    setNode() {\r\n      let graph = this.graph; //画布对象\r\n      let mapMsg = this.mapMsg; //节点配置信息\r\n      //   链接桩\r\n      const ports = {\r\n        groups: {\r\n          top: {\r\n            position: \"top\",\r\n            attrs: {\r\n              circle: {\r\n                r: 4,\r\n                magnet: true,\r\n                stroke: \"#5F95FF\",\r\n                strokeWidth: 1,\r\n                fill: \"#fff\",\r\n                style: {\r\n                  visibility: \"hidden\",\r\n                },\r\n              },\r\n            },\r\n          },\r\n          right: {\r\n            position: \"right\",\r\n            attrs: {\r\n              circle: {\r\n                r: 4,\r\n                magnet: true,\r\n                stroke: \"#5F95FF\",\r\n                strokeWidth: 1,\r\n                fill: \"#fff\",\r\n                style: {\r\n                  visibility: \"hidden\",\r\n                },\r\n              },\r\n            },\r\n          },\r\n          bottom: {\r\n            position: \"bottom\",\r\n            attrs: {\r\n              circle: {\r\n                r: 4,\r\n                magnet: true,\r\n                stroke: \"#5F95FF\",\r\n                strokeWidth: 1,\r\n                fill: \"#fff\",\r\n                style: {\r\n                  visibility: \"hidden\",\r\n                },\r\n              },\r\n            },\r\n          },\r\n          left: {\r\n            position: \"left\",\r\n            attrs: {\r\n              circle: {\r\n                r: 4,\r\n                magnet: true,\r\n                stroke: \"#5F95FF\",\r\n                strokeWidth: 1,\r\n                fill: \"#fff\",\r\n                style: {\r\n                  visibility: \"hidden\",\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        items: [\r\n          {\r\n            group: \"top\",\r\n          },\r\n          {\r\n            group: \"right\",\r\n          },\r\n          {\r\n            group: \"bottom\",\r\n          },\r\n          {\r\n            group: \"left\",\r\n          },\r\n        ],\r\n      };\r\n      //   注册节点分类 :分类器,特征提取器, 数据源\r\n      let classList = Object.keys(mapMsg);\r\n      // 分类数组\r\n      let groups = [];\r\n      let nodeSet = {};\r\n      const COLORLIST = this.colorList;\r\n      const COLORLENGTH = this.colorList.length;\r\n      // const SHAPELIST = this.shapeList;\r\n      // const SHAPELENGTH = this.shapeList.length;\r\n\r\n      //创建分组\r\n      classList.forEach((item, index) => {\r\n        let length = mapMsg[item].length;\r\n        groups.push({\r\n          title: item,\r\n          name: item,\r\n          graphHeight: Math.ceil(length / 2) * 60 || 130,\r\n          layoutOptions: {\r\n            rowHeight: 55,\r\n          },\r\n        });\r\n        nodeSet[item] = [];\r\n        let nodeShape = JSON.parse(JSON.stringify(this.nodeShape[index]));\r\n        nodeShape.ports = {\r\n          ...ports,\r\n        };\r\n        nodeShape.attrs.label.text = item;\r\n        //\r\n        Graph.registerNode(item, nodeShape, true);\r\n        //填充节点列表\r\n        mapMsg[item].forEach((nodeItem, nodeIndex) => {\r\n          let initailData = {};\r\n          let currentData = nodeItem[\"module_config\"][\"parameters\"];\r\n          Object.keys(currentData).forEach((dataKey) => {\r\n            let currentDataItem = currentData[dataKey];\r\n            if (Array.isArray(currentDataItem) && currentDataItem.length > 0) {\r\n              initailData[dataKey] = currentDataItem[0];\r\n            } else {\r\n              initailData[dataKey] = currentDataItem;\r\n            }\r\n          });\r\n          // 添加name(区分不同类别节点的标志)\r\n          initailData[\"name\"] = nodeItem[\"name\"];\r\n          // 节点别名和唯一标识\r\n          initailData[\"local_name\"] = nodeItem[\"name\"];\r\n\r\n          let itemEx = graph.createNode({\r\n            shape: item,\r\n            attrs: {\r\n              body: { fill: COLORLIST[nodeIndex % COLORLENGTH] },\r\n              label: {\r\n                textWrap: { text: nodeItem.name },\r\n                // text: ,\r\n              },\r\n            },\r\n            // data: nodeItem[\"module_config\"],\r\n            // data: { name: nodeItem[\"name\"] },\r\n            data: { ...initailData },\r\n          });\r\n          nodeSet[item].push(itemEx);\r\n        });\r\n      });\r\n      // console.log(groups);\r\n      // console.log(nodeSet);\r\n\r\n      // 初始化侧边栏\r\n      const stencil = new Addon.Stencil({\r\n        title: \"模块组件\",\r\n        target: graph,\r\n        //一个模块的宽高\r\n        stencilGraphWidth: 240,\r\n        stencilGraphHeight: 350,\r\n        collapsable: true,\r\n        groups: groups,\r\n        layoutOptions: {\r\n          columns: 2,\r\n          columnWidth: 100,\r\n          rowHeight: 60,\r\n          resizeToFit: true,\r\n        },\r\n      });\r\n      this.stencil = stencil;\r\n      //渲染到页面\r\n      document.getElementById(\"stencil\").appendChild(stencil.container);\r\n      // 加载可拖拽节点\r\n      Object.keys(nodeSet).forEach((res) => {\r\n        stencil.load(nodeSet[res], res);\r\n      });\r\n    },\r\n    // 快捷键与事件\r\n    setKeyEvent() {\r\n      const graph = this.graph;\r\n      // #region 快捷键与事件\r\n      // copy cut paste\r\n      graph.bindKey([\"meta+c\", \"ctrl+c\"], () => {\r\n        const cells = graph.getSelectedCells();\r\n        if (cells.length) {\r\n          graph.copy(cells);\r\n        }\r\n        return false;\r\n      });\r\n      graph.bindKey([\"meta+x\", \"ctrl+x\"], () => {\r\n        const cells = graph.getSelectedCells();\r\n        if (cells.length) {\r\n          graph.cut(cells);\r\n        }\r\n        return false;\r\n      });\r\n      graph.bindKey([\"meta+v\", \"ctrl+v\"], () => {\r\n        if (!graph.isClipboardEmpty()) {\r\n          const cells = graph.paste({ offset: 32 });\r\n          graph.cleanSelection();\r\n          graph.select(cells);\r\n        }\r\n        return false;\r\n      });\r\n\r\n      //undo redo\r\n      graph.bindKey([\"meta+z\", \"ctrl+z\"], () => {\r\n        if (graph.history.canUndo()) {\r\n          graph.history.undo();\r\n        }\r\n        return false;\r\n      });\r\n      graph.bindKey([\"meta+shift+z\", \"ctrl+shift+z\"], () => {\r\n        if (graph.history.canRedo()) {\r\n          graph.history.redo();\r\n        }\r\n        return false;\r\n      });\r\n\r\n      // select all\r\n      graph.bindKey([\"meta+a\", \"ctrl+a\"], () => {\r\n        const nodes = graph.getNodes();\r\n        if (nodes) {\r\n          graph.select(nodes);\r\n        }\r\n      });\r\n\r\n      //delete\r\n      graph.bindKey(\"backspace\", () => {\r\n        const cells = graph.getSelectedCells();\r\n        if (cells.length) {\r\n          graph.removeCells(cells);\r\n        }\r\n      });\r\n\r\n      // zoom\r\n      graph.bindKey([\"ctrl+1\", \"meta+1\"], () => {\r\n        const zoom = graph.zoom();\r\n        if (zoom < 1.5) {\r\n          graph.zoom(0.1);\r\n        }\r\n      });\r\n      graph.bindKey([\"ctrl+2\", \"meta+2\"], () => {\r\n        const zoom = graph.zoom();\r\n        if (zoom > 0.5) {\r\n          graph.zoom(-0.1);\r\n        }\r\n      });\r\n\r\n      // 控制连接桩显示/隐藏\r\n      const showPorts = (ports, show) => {\r\n        for (let i = 0, len = ports.length; i < len; i = i + 1) {\r\n          ports[i].style.visibility = show ? \"visible\" : \"hidden\";\r\n        }\r\n      };\r\n      graph.on(\"node:mouseenter\", () => {\r\n        const container = document.getElementById(\"container\");\r\n        const ports = container.querySelectorAll(\".x6-port-body\");\r\n        showPorts(ports, true);\r\n      });\r\n      graph.on(\"node:mouseleave\", () => {\r\n        const container = document.getElementById(\"container\");\r\n        const ports = container.querySelectorAll(\".x6-port-body\");\r\n        showPorts(ports, false);\r\n      });\r\n      // #endregion\r\n    },\r\n    // 节点与数据交互\r\n    setNodeData() {\r\n      const that = this;\r\n      const graph = this.graph;\r\n      /**\r\n       * graph\r\n       * 画布的监听\r\n       */\r\n      //鼠标离开画布时统计节点数量\r\n      graph.on(\"graph:mouseleave\", () => {\r\n        this.graphNodes = this.graph.getNodes();\r\n        // this.$store.commit(\"FlowChart/setParamList\");\r\n        // console.log(this.graph.getNodes());\r\n      });\r\n      /**\r\n       * cells\r\n       * 节点(边和点)的监听\r\n       */\r\n      //边和节点被点击时,将参数列表设置为可修改状态\r\n      graph.on(\"cell:click\", () => {\r\n        // that.isChangeCurrentProject = true;\r\n        that.$store.commit(\"FlowChart/setParamList\", {\r\n          key: \"isdisabled\",\r\n          value: false,\r\n        });\r\n      });\r\n      graph.on(\"cell:removed\", ({ cell }) => {\r\n        that.isChangeCurrentProject = true;\r\n        if (this.curNode.id === cell.id) {\r\n          //去除遮罩层\r\n          this.$store.commit(\"FlowChart/setParamList\", {\r\n            key: \"isControlGraph\",\r\n            value: false,\r\n          });\r\n          this.curNode = \"\";\r\n          this.$store.commit(\"FlowChart/setParamList\", {\r\n            key: \"params\",\r\n            value: [],\r\n          });\r\n          this.$store.commit(\"FlowChart/setParamList\", {\r\n            key: \"nodeData\",\r\n            value: {},\r\n          });\r\n        }\r\n        // console.log(cell.id);\r\n        // console.log(this.curNode.id);\r\n      });\r\n      graph.on(\"cell:change:*\", () => {\r\n        that.isChangeCurrentProject = true;\r\n        console.log(\"监听到改变了\");\r\n      });\r\n\r\n      /**\r\n       * node\r\n       * 点的监听\r\n       */\r\n      //添加节点时,设置local_name\r\n      graph.on(\"node:added\", ({ node }) => {\r\n        let currentName = node.data[\"local_name\"];\r\n        that.itemMsg.counter += 1;\r\n        let newName = `${currentName}_${that.itemMsg.counter}`;\r\n        node.setAttrs({ label: { textWrap: { text: newName } } });\r\n        node.setData({ local_name: newName });\r\n      });\r\n      //点击节点,输入配置参数\r\n      graph.on(\"node:click\", ({ node }) => {\r\n        that.curNode = node;\r\n        let key = node.data[\"name\"];\r\n        let paramObj = this.mapMsg[node[\"shape\"]].filter(\r\n          (item) => item.name === key\r\n        )[0][\"module_config\"][\"parameters\"];\r\n\r\n        paramObj[\"local_name\"] = node.data[\"local_name\"];\r\n        let paramList = [];\r\n\r\n        Object.keys(paramObj).forEach((item) => {\r\n          let listItem = { name: item };\r\n          if (Array.isArray(paramObj[item])) {\r\n            // listItem.value = paramObj[item][0];\r\n            listItem.value = node.data[item];\r\n            listItem.tips = paramObj[item].map((itemData) => {\r\n              return { value: itemData };\r\n            });\r\n          } else {\r\n            // listItem.value = paramObj[item];\r\n            listItem.value = node.data[item];\r\n            listItem.tips = [{ value: paramObj[item] }];\r\n          }\r\n          paramList.push(listItem);\r\n        });\r\n        this.$store.commit(\"FlowChart/setParamList\", {\r\n          key: \"params\",\r\n          value: [...paramList],\r\n        });\r\n        this.$store.commit(\"FlowChart/setParamList\", {\r\n          key: \"nodeData\",\r\n          value: { ...node.data },\r\n        });\r\n      });\r\n      //节点被删除时\r\n      graph.on(\"node:removed\", ({ node }) => {\r\n        let removedNode = node.data[\"local_name\"];\r\n        let initialModule =\r\n          that.project_structure.running_config.initial_module;\r\n        //初始模块被删除\r\n        if (initialModule == removedNode) {\r\n          that.project_structure.running_config.initial_module = \"\";\r\n          that.project_structure.running_config.initial_function = \"\";\r\n          //弹出提示\r\n          this.$message({\r\n            type: \"error\",\r\n            message: \"初始模块已经被删除,请重新选择初始模块\",\r\n          });\r\n        }\r\n        //禁用参数配置\r\n        that.$store.commit(\"FlowChart/setParamList\", {\r\n          key: \"isdisabled\",\r\n          value: true,\r\n        });\r\n      });\r\n\r\n      /**edge*/\r\n      //点击边时,给边设置参数\r\n      graph.on(\"edge:click\", ({ edge }) => {\r\n        that.curNode = edge;\r\n        let targetNode = graph.getCellById(edge.target.cell);\r\n        let keyName = targetNode.data[\"name\"];\r\n        let shape = targetNode.shape;\r\n        let paramList = this.mapMsg[shape].filter((res) => {\r\n          return res.name === keyName;\r\n        })[0][\"module_config\"][\"link_func\"];\r\n        if (Array.isArray(paramList)) {\r\n          let tips = paramList.map((item) => {\r\n            return { value: item };\r\n          });\r\n          let resultList = [\r\n            {\r\n              name: \"link_func\",\r\n              value: edge.data.link_func,\r\n              tips: tips,\r\n            },\r\n          ];\r\n          // edge.setData({ link_func: edge.data.link_func || paramList[0] });\r\n          this.$store.commit(\"FlowChart/setParamList\", {\r\n            key: \"params\",\r\n            value: resultList,\r\n          });\r\n        }\r\n      });\r\n      //创建边时执行的方法\r\n      graph.on(\"edge:added\", ({ edge }) => {\r\n        edge.setData({ link_func: \"\" });\r\n      });\r\n      //连接边时,给边赋默认值\r\n      graph.on(\"edge:connected\", ({ edge, currentCell }) => {\r\n        console.log(currentCell);\r\n        let targetNode = currentCell;\r\n        let keyName = targetNode.data[\"name\"];\r\n        let shape = targetNode.shape;\r\n        let paramList = this.mapMsg[shape].filter((res) => {\r\n          return res.name === keyName;\r\n        })[0][\"module_config\"][\"link_func\"];\r\n        if (Array.isArray(paramList)) {\r\n          edge.setData({ link_func: paramList[0] });\r\n        }\r\n      });\r\n\r\n      /**blank*/\r\n      // 点击画布空白区域\r\n      graph.on(\"blank:click\", () => {\r\n        that.curNode = \"\";\r\n        that.$store.commit(\"FlowChart/setParamList\", {\r\n          key: \"isdisabled\",\r\n          value: true,\r\n        });\r\n      });\r\n    },\r\n    //保存数据\r\n    saveProject() {\r\n      let cells = this.graph.toJSON().cells;\r\n      this.project_structure.graph_config = cells;\r\n      this.project_structure.counter = this.itemMsg.counter;\r\n      let params = {\r\n        project_basic_info: this.project_basic_info,\r\n        project_structure: this.project_structure,\r\n      };\r\n      if (this.checkParams()) {\r\n        this.$api\r\n          .updateProject(params)\r\n          .then(() => {\r\n            this.isChangeCurrentProject = false;\r\n            this.$message({\r\n              showClose: true,\r\n              type: \"success\",\r\n              message: \"保存成功\",\r\n            });\r\n          })\r\n          .catch(() => {\r\n            this.$message({\r\n              type: \"error\",\r\n              message: \"保存失败,请重试\",\r\n            });\r\n          });\r\n      }\r\n    },\r\n    //返回时保存数据\r\n    goBackSaveProject() {\r\n      if (this.checkParams()) {\r\n        let cells = this.graph.toJSON().cells;\r\n        this.project_structure.graph_config = cells;\r\n        this.project_structure.counter = this.itemMsg.counter;\r\n        let params = {\r\n          project_basic_info: this.project_basic_info,\r\n          project_structure: this.project_structure,\r\n        };\r\n        let loading = this.$loading({\r\n          lock: true,\r\n          text: \"正在上传...\",\r\n        });\r\n        this.$api\r\n          .updateProject(params)\r\n          .then(() => {\r\n            this.$message({\r\n              showClose: true,\r\n              type: \"success\",\r\n              message: \"保存成功\",\r\n            });\r\n            loading.close();\r\n            this.$router.push({ name: \"ProjectManage\" });\r\n          })\r\n          .catch(() => {\r\n            loading.close();\r\n            this.$message({\r\n              type: \"error\",\r\n              message: \"保存失败,请重试\",\r\n            });\r\n          });\r\n      }\r\n    },\r\n    //复位\r\n    resetView() {\r\n      this.graph.centerContent();\r\n      console.log(\"复位\");\r\n    },\r\n    //清空画布\r\n    clearGraph() {\r\n      this.graph.clearCells();\r\n      console.log(\"清空画布\");\r\n    },\r\n    //上一步\r\n    preStep() {\r\n      this.graph.undo();\r\n      console.log(\"上一步\");\r\n    },\r\n    //下一步\r\n    nextStep() {\r\n      this.graph.redo();\r\n      console.log(\"下一步\");\r\n    },\r\n    //删除节点\r\n    delCell() {\r\n      let cells = this.graph.getSelectedCells();\r\n      cells.forEach((cell) => {\r\n        this.graph.removeCell(cell);\r\n      });\r\n    },\r\n    //返回上一页\r\n    goBack() {\r\n      if (this.isChangeCurrentProject) {\r\n        this.$confirm(\"是否保存当前修改, 是否继续?\", \"提示\", {\r\n          confirmButtonText: \"保存\",\r\n          cancelButtonText: \"不保存\",\r\n          type: \"warning\",\r\n        })\r\n          .then(() => {\r\n            this.goBackSaveProject();\r\n          })\r\n          .catch(() => {\r\n            this.$message({\r\n              type: \"info\",\r\n              message: \"修改将不会保存\",\r\n              showClose: true,\r\n            });\r\n            this.$router.push({ name: \"ProjectManage\" });\r\n          });\r\n      } else {\r\n        this.$router.push({ name: \"ProjectManage\" });\r\n      }\r\n    },\r\n    //导出数据\r\n    importProject() {\r\n      // this.graph.fromJSON(this.project_structure.graph_config);\r\n      let cells = this.graph.toJSON().cells;\r\n      this.project_structure.graph_config = cells;\r\n      console.log(cells);\r\n    },\r\n    //配置项目信息\r\n    isShow() {\r\n      this.$store.commit(\"FlowChart/setDialogFrom\", {\r\n        key: \"projectBasicInfo\",\r\n        value: {},\r\n      });\r\n      this.$store.commit(\"FlowChart/setDialogFrom\", {\r\n        key: \"projectBasicInfo\",\r\n        value: { ...this.project_basic_info },\r\n      });\r\n      this.$store.commit(\"FlowChart/setDialogFrom\", {\r\n        key: \"dialogFormVisible\",\r\n        value: false,\r\n      });\r\n      this.$store.commit(\"FlowChart/setDialogFrom\", {\r\n        key: \"dialogFormVisible\",\r\n        value: true,\r\n      });\r\n    },\r\n    //校验参数是否正确\r\n    checkParams() {\r\n      let errorList = [];\r\n      let tipMsg = {\r\n        initial_module: \"请配置初始模块\",\r\n        initial_function: \"请配置入口函数\",\r\n        graph_config_null: \"不能保存空项目\",\r\n        graph_config: \"请检查节点或边的参数配置\",\r\n        project_name: \"项目名不能为空\",\r\n        project_desc: \"项目描述不能为空\",\r\n        project_id: \"项目编号不能为空\",\r\n      };\r\n      let runningConfig = this.project_structure.running_config;\r\n      let graphConfig = this.project_structure.graph_config;\r\n      let projectBasicInfo = this.project_basic_info;\r\n      //校验项目配置信息\r\n      if (!projectBasicInfo) {\r\n        errorList.push(...[\"project_desc\", \"project_name\"]);\r\n      } else {\r\n        Object.keys(projectBasicInfo).forEach((key) => {\r\n          if (!projectBasicInfo[key]) {\r\n            errorList.push(key);\r\n          }\r\n        });\r\n      }\r\n      //校验runningConfig\r\n      if (!runningConfig) {\r\n        errorList.push(...[\"initial_module\", \"initial_function\"]);\r\n      } else {\r\n        Object.keys(runningConfig).forEach((key) => {\r\n          if (!runningConfig[key]) {\r\n            errorList.push(key);\r\n          }\r\n        });\r\n      }\r\n\r\n      //校验graphConfig\r\n      if (!Array.isArray(graphConfig) || graphConfig.length <= 0) {\r\n        errorList.push(\"graph_config_null\");\r\n        console.log(\"不是数组\");\r\n      } else {\r\n        let isNode = graphConfig.every((item) => {\r\n          return Object.values(item.data).every((dataItem) => {\r\n            return dataItem !== \"\";\r\n          });\r\n        });\r\n        if (!isNode) {\r\n          errorList.push(\"graph_config\");\r\n        }\r\n      }\r\n      //弹出提示\r\n      if (errorList.length > 0) {\r\n        errorList.forEach((item) => {\r\n          setTimeout(() => {\r\n            this.$message({\r\n              showClose: true,\r\n              message: `${tipMsg[item]}`,\r\n              type: \"error\",\r\n              duration: 5000,\r\n            });\r\n          }, 10);\r\n        });\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    //获取项目数据\r\n    getOneProjectData() {\r\n      this.$api.getProjectConfig({ id: 104 }).then((res) => {\r\n        console.log(res);\r\n        console.log(Array.isArray(res.mapMsg.graph_config));\r\n        this.project_structure.running_config = res.mapMsg.running_config;\r\n        this.project_structure.graph_config = res.mapMsg.graph_config;\r\n        this.graph.fromJSON(res.mapMsg.graph_config);\r\n      });\r\n    },\r\n    // 获取模块数据\r\n    getModules() {\r\n      this.$api.getModules().then((res) => {\r\n        console.log(res);\r\n        this.mapMsg = res.mapMsg;\r\n        this.setNode(); // 初始化模块侧边栏\r\n      });\r\n    },\r\n    // 获取页面初始数据\r\n    getInitialData() {\r\n      let curItemID = this.$store.state.projectManage.resultList.curItem.id;\r\n      let qingqiu = [\r\n        this.$api.getModules(),\r\n        this.$api.getProjectConfig({ id: curItemID }),\r\n      ];\r\n      let initData = Promise.all(qingqiu);\r\n      initData.then((res) => {\r\n        this.mapMsg = res[0].mapMsg;\r\n        this.setNode(); // 初始化模块侧边栏\r\n        this.project_structure.running_config = res[1].mapMsg.running_config;\r\n        this.project_structure.graph_config = res[1].mapMsg.graph_config;\r\n        this.itemMsg.counter = res[1].mapMsg.counter || 1;\r\n        this.graph.fromJSON(res[1].mapMsg.graph_config);\r\n        //修改标志为false\r\n        setTimeout(() => {\r\n          this.isChangeCurrentProject = false;\r\n        }, 0);\r\n      });\r\n    },\r\n    //刷新页面时保存vuex中的信息\r\n    saveVuexToLocal() {\r\n      // const that = this;\r\n      if (sessionStorage.getItem(\"store\")) {\r\n        this.$store.replaceState(\r\n          Object.assign(\r\n            {},\r\n            this.$store.state,\r\n            JSON.parse(sessionStorage.getItem(\"store\"))\r\n          )\r\n        );\r\n      }\r\n      window.addEventListener(\"beforeunload\", this.saveVuex);\r\n    },\r\n    //页面退出时,取消监听\r\n    cancelListening() {\r\n      window.removeEventListener(\"beforeunload\", this.saveVuex);\r\n      sessionStorage.removeItem(\"store\");\r\n    },\r\n    //保存vuex中的数据\r\n    saveVuex() {\r\n      sessionStorage.setItem(\"store\", JSON.stringify(this.$store.state));\r\n    },\r\n    //拖动工具栏\r\n    dragToolsBox() {\r\n      let map = document.getElementById(\"tools-box\");\r\n      let isDrop = false;\r\n      let disx, disy;\r\n      map.onmousedown = function (event) {\r\n        disx = event.pageX - map.offsetLeft;\r\n        disy = event.pageY - map.offsetTop;\r\n        isDrop = true;\r\n      };\r\n      window.onmouseup = function () {\r\n        isDrop = false;\r\n      };\r\n      window.onmousemove = function (event) {\r\n        if (isDrop) {\r\n          map.style.left = event.pageX - disx + \"px\";\r\n          map.style.top = event.pageY - disy + \"px\";\r\n        }\r\n      };\r\n    },\r\n  },\r\n  created() {\r\n    this.saveVuexToLocal();\r\n  },\r\n  mounted() {\r\n    // this.getModules(); //获取\r\n    // this.getOneProjectData(); //获取项目数据\r\n    this.setGraph(); //初始化画布\r\n    // this.setNode(); // 初始化模块侧边栏\r\n    this.setKeyEvent(); // 快捷键事件\r\n    this.setNodeData(); //节点与数据交互\r\n    // this.graph.fromJSON(this.project_structure.graph_config);\r\n  },\r\n  activated() {\r\n    this.isChangeCurrentProject = false; //项目是否修改过标注\r\n    this.saveVuexToLocal();\r\n    this.getInitialData();\r\n  },\r\n  deactivated() {\r\n    this.cancelListening();\r\n    // clearTimeout(this.pollingTimer);\r\n  },\r\n  beforeDestroy() {\r\n    // clearTimeout(this.pollingTimer);\r\n    this.cancelListening();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"~assets/scss/FlowChart/FlowChart.scss\";\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FlowChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FlowChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FlowChart.vue?vue&type=template&id=26c3b85e&scoped=true&\"\nimport script from \"./FlowChart.vue?vue&type=script&lang=js&\"\nexport * from \"./FlowChart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./FlowChart.vue?vue&type=style&index=0&id=26c3b85e&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"26c3b85e\",\n  null\n  \n)\n\nexport default component.exports","module.exports = __webpack_public_path__ + \"static/img/clear.fb88e9cd.svg\";","'use strict';\nvar $ = require('../internals/export');\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n$({ target: 'URL', proto: true, enumerable: true }, {\n  toJSON: function toJSON() {\n    return URL.prototype.toString.call(this);\n  }\n});\n","module.exports = __webpack_public_path__ + \"static/img/back.9823959a.svg\";","module.exports = __webpack_public_path__ + \"static/img/refresh.fdc08188.svg\";"],"sourceRoot":""}